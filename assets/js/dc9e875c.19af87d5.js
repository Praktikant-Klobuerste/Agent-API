"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[417],{655:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var i=n(4848),s=n(8453);const t={sidebar_position:2},a="lair.py",o={id:"resources/lair_py",title:"lair.py",description:"",source:"@site/docs/00_resources/01_lair_py.md",sourceDirName:"00_resources",slug:"/resources/lair_py",permalink:"/Agent-API/docs/resources/lair_py",draft:!1,unlisted:!1,editUrl:"https://github.com/Praktikant-Klobuerste/Agent-API/tree/main/docusaurus/docs/00_resources/01_lair_py.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"agent.py",permalink:"/Agent-API/docs/resources/agent_py"},next:{title:"team.py",permalink:"/Agent-API/docs/resources/team_py"}},l={},c=[];function d(r){const e={code:"code",h1:"h1",pre:"pre",...(0,s.R)(),...r.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"lairpy",children:"lair.py"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from flask import request\r\nfrom flask.views import MethodView\r\nfrom flask_smorest import Blueprint, abort\r\nfrom schemas import LairSchema\r\n\r\nlairs = {}\r\nblp = Blueprint("Lair", __name__, description="Operations on Lairs")\r\n\r\nclass Lair():\r\n    _nLairs = 0\r\n    _registry = {}\r\n\r\n    def __init__(self, name, cap):\r\n        self.id = Lair._nLairs\r\n        self.name = name\r\n        self.cap = cap\r\n        self.secret = True\r\n        Lair._nLairs += 1\r\n        Lair._registry[self.id] = self\r\n\r\n    def unmask(self):\r\n        self.secret = False\r\n\r\n    def to_dict(self):\r\n        return {"id": self.id, "name": self.name, "cap": self.cap, "secret": self.secret}\r\n\r\n    @classmethod\r\n    def get(cls, lair_id):\r\n        return cls._registry.get(lair_id)\r\n\r\n\r\n@blp.route("/lair")\r\nclass LairsList(MethodView):\r\n\r\n    @blp.response(200, LairSchema(many=True))\r\n    def get(self):\r\n        print(Lair._registry)\r\n        return [lair.to_dict() for lair in Lair._registry.values()]\r\n        # return {lair.id : lair.to_dict() for lair in Lair._registry.values()}\r\n\r\n    @blp.arguments(LairSchema)\r\n    @blp.response(201, LairSchema)\r\n    def post(self, new_data):\r\n        lair = Lair(**new_data)\r\n        return lair.to_dict()\r\n\r\n\r\n@blp.route("/lair/<int:lair_id>")\r\nclass LairResource(MethodView):\r\n\r\n    @blp.response(200, LairSchema)\r\n    def get(self, lair_id):\r\n        lair = Lair.get(lair_id)\r\n        if lair is None:\r\n            abort(404, message="Lair not found.")\r\n        return lair.to_dict()\r\n\r\n\r\n\r\n@blp.route(\'/lair//<int:lair_id>/unmask\')\r\nclass LairUnmaskResource(MethodView):\r\n    @blp.response(200, LairSchema)\r\n    def put(self, lair_id):\r\n        lair = Lair.get(lair_id)\r\n        if lair is None:\r\n            abort(404, message="Lair not found.")\r\n        lair.unmask()\r\n        return lair.to_dict()\n'})})]})}function u(r={}){const{wrapper:e}={...(0,s.R)(),...r.components};return e?(0,i.jsx)(e,{...r,children:(0,i.jsx)(d,{...r})}):d(r)}},8453:(r,e,n)=>{n.d(e,{R:()=>a,x:()=>o});var i=n(6540);const s={},t=i.createContext(s);function a(r){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function o(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(s):r.components||s:a(r.components),i.createElement(t.Provider,{value:e},r.children)}}}]);