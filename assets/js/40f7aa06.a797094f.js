"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[994],{4512:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>y,contentTitle:()=>D,default:()=>L,frontMatter:()=>P,metadata:()=>_,toc:()=>E});var t=r(4848),s=r(8453),a=r(6540),i=r(4164),d=r(3104),o=r(6347),l=r(205),c=r(7485),u=r(1682),h=r(9466);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:r}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:s}}=e;return{value:n,label:r,attributes:t,default:s}}))}(r);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function g(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:r}=e;const t=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,c.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})}),[s,t])]}function x(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,s=m(e),[i,d]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[o,c]=f({queryString:r,groupId:t}),[u,p]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,s]=(0,h.Dv)(r);return[t,(0,a.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:t}),x=(()=>{const e=o??u;return g({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{x&&d(x)}),[x]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);d(e),c(e),p(e)}),[c,p,s]),tabValues:s}}var b=r(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:n,block:r,selectedValue:s,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,d.a_)(),u=e=>{const n=e.currentTarget,r=l.indexOf(n),t=o[r].value;t!==s&&(c(n),a(t))},h=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},n),children:o.map((e=>{let{value:n,label:r,attributes:a}=e;return(0,t.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>l.push(e),onKeyDown:h,onClick:u,...a,className:(0,i.A)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":s===n}),children:r??n},n)}))})}function S(e){let{lazy:n,children:r,selectedValue:s}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function v(e){const n=x(e);return(0,t.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,t.jsx)(k,{...e,...n}),(0,t.jsx)(S,{...e,...n})]})}function A(e){const n=(0,b.A)();return(0,t.jsx)(v,{...e,children:p(e.children)},String(n))}const w={tabItem:"tabItem_Ymn6"};function I(e){let{children:n,hidden:r,className:s}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,i.A)(w.tabItem,s),hidden:r,children:n})}const P={sidebar_position:3},D="PostgreSQL & pgAdmin mit Docker",_={id:"docker/docker_postgres",title:"PostgreSQL & pgAdmin mit Docker",description:"- Installierten Sie Docker auf Ihrem System.",source:"@site/docs/01_docker/02_docker_postgres.md",sourceDirName:"01_docker",slug:"/docker/docker_postgres",permalink:"/Agent-API/docs/docker/docker_postgres",draft:!1,unlisted:!1,editUrl:"https://github.com/Praktikant-Klobuerste/Agent-API/tree/main/docusaurus/docs/01_docker/02_docker_postgres.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Docker Befehle",permalink:"/Agent-API/docs/docker/docker_befehle"},next:{title:"schemas.py",permalink:"/Agent-API/docs/schemas_py"}},y={},E=[{value:"Schritt 1: PostgreSQL-Image herunterladen",id:"schritt-1-postgresql-image-herunterladen",level:2},{value:"Schritt 2: PostgreSQL-Container starten",id:"schritt-2-postgresql-container-starten",level:2},{value:"Schritt 3: pgAdmin4-Image herunterladen",id:"schritt-3-pgadmin4-image-herunterladen",level:2},{value:"Schritt 4: pgAdmin4-Container starten",id:"schritt-4-pgadmin4-container-starten",level:2},{value:"Schritt 5: Laufende Docker-Container \xfcberpr\xfcfen",id:"schritt-5-laufende-docker-container-\xfcberpr\xfcfen",level:2},{value:"Schritt 6: pgAdmin im Browser aufrufen",id:"schritt-6-pgadmin-im-browser-aufrufen",level:2},{value:"Schritt 7: Verbindung zu PostgreSQL herstellen",id:"schritt-7-verbindung-zu-postgresql-herstellen",level:2}];function C(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"postgresql--pgadmin-mit-docker",children:"PostgreSQL & pgAdmin mit Docker"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Installierten Sie Docker auf Ihrem System."}),"\n"]})}),"\n",(0,t.jsxs)(n.p,{children:["Link: ",(0,t.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop/",children:"Docker - Desktop"})]}),"\n",(0,t.jsx)(n.h2,{id:"schritt-1-postgresql-image-herunterladen",children:"Schritt 1: PostgreSQL-Image herunterladen"}),"\n",(0,t.jsx)(n.p,{children:"\xd6ffnen Sie das Terminal und f\xfchren Sie den folgenden Befehl aus, um das offizielle Postgres-Image zu ziehen:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker pull postgres\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Link: ",(0,t.jsx)(n.a,{href:"https://hub.docker.com/_/postgres",children:"postgres - docker hub"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"docker-pull-postgres",src:r(1952).A+"",width:"983",height:"558"})}),"\n",(0,t.jsx)(n.h2,{id:"schritt-2-postgresql-container-starten",children:"Schritt 2: PostgreSQL-Container starten"}),"\n",(0,t.jsxs)(n.p,{children:["Starten Sie einen Postgres-Container mit einem festgelegten Passwort f\xfcr den ",(0,t.jsx)(n.code,{children:"postgres"}),"-Benutzer:"]}),"\n",(0,t.jsxs)(A,{groupId:"run-code",children:[(0,t.jsx)(I,{value:"clear",label:"Clear",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker run \\\r\n--name <container-postgresdb> \\\r\n-p 5432:5432 \\\r\n-e POSTGRES_USER: <username> \\ #default postgres\r\n-e POSTGRES_PASSWORD=<password> \\\r\n--restart unless-stopped \\ #optional\r\n-d postgres\n"})})}),(0,t.jsx)(I,{value:"copy",label:"Copy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker run --name container-postgresdb -p 5432:5432 -e POSTGRES_USER:username -e POSTGRES_PASSWORD=password --restart unless-stopped -d postgres\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Ersetze ",(0,t.jsx)(n.code,{children:"<username>"})," (oder entferne flag), ",(0,t.jsx)(n.code,{children:"<password>"})," und ",(0,t.jsx)(n.code,{children:"<container-postgresdb>"}),"."]}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)(n.p,{children:"Erkl\xe4rung"})}),(0,t.jsxs)("div",{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--name <container-postgresdb>"}),": Gibt dem Container den Namen ",(0,t.jsx)(n.code,{children:"<container-postgresdb>"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-p 5432:5432"}),": Mappt den Port 5432 vom Host auf den Container."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-e POSTGRES_PASSWORD=<password>"}),": Setzt das Passwort f\xfcr den eingetragenen User."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--restart unless-stopped"}),": Container wird neugestartet, au\xdfer er wird manuell gestoppt."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-d postgres"}),': Startet den Container im Hintergrund mit dem Docker-Image "postgres".']}),"\n"]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"docker-pull-postgres",src:r(5334).A+"",width:"1890",height:"298"})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"schritt-3-pgadmin4-image-herunterladen",children:"Schritt 3: pgAdmin4-Image herunterladen"}),"\n",(0,t.jsx)(n.p,{children:"Laden Sie das pgAdmin4-Image herunter:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker pull dpage/pgadmin4\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Link: ",(0,t.jsx)(n.a,{href:"https://hub.docker.com/r/dpage/pgadmin4",children:"pgAdmin - docker hub"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"docker-pull-postgres",src:r(3969).A+"",width:"983",height:"585"})}),"\n",(0,t.jsx)(n.h2,{id:"schritt-4-pgadmin4-container-starten",children:"Schritt 4: pgAdmin4-Container starten"}),"\n",(0,t.jsx)(n.p,{children:"Erstellen und starten Sie einen pgAdmin4-Container:"}),"\n",(0,t.jsxs)(A,{groupId:"run-code",children:[(0,t.jsx)(I,{value:"clear",label:"Clear",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'docker run \\\r\n--name <container-pgadmin> \\\r\n-p 82:80 \\\r\n-e "PGADMIN_DEFAULT_EMAIL=<name@example.com>" \\\r\n-e "PGADMIN_DEFAULT_PASSWORD=<password>" \\\r\n-d dpage/pgadmin4\n'})})}),(0,t.jsx)(I,{value:"copy",label:"Copy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'docker run --name <container-pgadmin> -p 82:80 -e "PGADMIN_DEFAULT_EMAIL=<name@example.com>" -e "PGADMIN_DEFAULT_PASSWORD=<password>" -d dpage/pgadmin4\n'})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Ersetze ",(0,t.jsx)(n.code,{children:"<name@example.com>"})," mit Ihrer E-Mail-Adresse und ",(0,t.jsx)(n.code,{children:"<passwort>"})," mit einem sicheren Passwort."]}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)(n.p,{children:"Erkl\xe4rung"})}),(0,t.jsxs)("div",{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--name <container-pgadmin>"}),": Gibt dem Container den Namen ",(0,t.jsx)(n.code,{children:"<container-pgadmin>"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-p 82:80"}),": Mappt den Port 82 auf den Port 80 im Container. Dies bedeutet, dass Anfragen an Port 82 auf dem Host auf Port 80 im Container weitergeleitet werden."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-e PGADMIN_DEFAULT_EMAIL=<name@example.com>"}),': Setzt die Umgebungsvariable f\xfcr die Standard-E-Mail-Adresse von PgAdmin auf "',(0,t.jsx)(n.a,{href:"mailto:name@example.com",children:"name@example.com"}),'".']}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-e PGADMIN_DEFAULT_PASSWORD=<password>"}),": Setzt die Umgebungsvariable f\xfcr das Standardpasswort von PgAdmin auf ."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"-d dpage/pgadmin4"}),": Startet den Container im Hintergrund (detach mode) mit dem Image ",(0,t.jsx)(n.a,{href:"https://hub.docker.com/r/dpage/pgadmin4",children:'"dpage/pgadmin4"'}),"."]}),"\n"]}),"\n"]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"docker-pull-postgres",src:r(4071).A+"",width:"1858",height:"414"})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"schritt-5-laufende-docker-container-\xfcberpr\xfcfen",children:"Schritt 5: Laufende Docker-Container \xfcberpr\xfcfen"}),"\n",(0,t.jsx)(n.p,{children:"\xdcberpr\xfcfen Sie, ob Ihre Container laufen:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker ps\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"docker-docker-ps",src:r(3072).A+"",width:"1872",height:"498"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Docker Desktop\r\n",(0,t.jsx)(n.img,{alt:"docker-docker-ps2",src:r(5312).A+"",width:"2278",height:"202"})]})}),"\n",(0,t.jsx)(n.h2,{id:"schritt-6-pgadmin-im-browser-aufrufen",children:"Schritt 6: pgAdmin im Browser aufrufen"}),"\n",(0,t.jsx)(n.p,{children:"\xd6ffnen Sie Ihren Webbrowser und navigieren Sie zu:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"http://localhost:82/\n"})}),"\n",(0,t.jsx)(n.p,{children:"Melden Sie sich mit Ihrer E-Mail-Adresse und dem Passwort an, die Sie f\xfcr pgAdmin festgelegt haben."}),"\n",(0,t.jsx)(n.h2,{id:"schritt-7-verbindung-zu-postgresql-herstellen",children:"Schritt 7: Verbindung zu PostgreSQL herstellen"}),"\n",(0,t.jsx)(n.p,{children:"In pgAdmin erstellen Sie eine neue Serververbindung:"}),"\n",(0,t.jsx)(n.p,{children:"name: container-postgresdb\r\nhost: host.docker.internal\r\ndatabase: postgres\r\nuser: postgres\r\npassword: admin"})]})}function L(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(C,{...e})}):C(e)}},3072:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/docker-ps-308a3eedc61c04ed8ae6883def99c384.png"},5312:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/docker-ps2-a69ea8dc81ff8239d7d0d879f52ca9c7.png"},3969:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/docker-pull-pgadmin-f52f52289c42967806217d4fdf065fb5.png"},1952:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/docker-pull-postgres-a937b0358c2f018c937a5c7b63003c9d.png"},4071:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/docker-run-pgadmin-03362514c990619246d861896c1f2082.png"},5334:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/docker-run-postgres-9585de478ee9cfd300ab3fd933d18b2f.png"},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>d});var t=r(6540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);